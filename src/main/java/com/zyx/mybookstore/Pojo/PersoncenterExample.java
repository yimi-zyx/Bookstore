package com.zyx.mybookstore.Pojo;

import java.util.ArrayList;
import java.util.List;

public class PersoncenterExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public PersoncenterExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPersoncenteridIsNull() {
            addCriterion("personcenterid is null");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridIsNotNull() {
            addCriterion("personcenterid is not null");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridEqualTo(Integer value) {
            addCriterion("personcenterid =", value, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridNotEqualTo(Integer value) {
            addCriterion("personcenterid <>", value, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridGreaterThan(Integer value) {
            addCriterion("personcenterid >", value, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridGreaterThanOrEqualTo(Integer value) {
            addCriterion("personcenterid >=", value, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridLessThan(Integer value) {
            addCriterion("personcenterid <", value, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridLessThanOrEqualTo(Integer value) {
            addCriterion("personcenterid <=", value, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridIn(List<Integer> values) {
            addCriterion("personcenterid in", values, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridNotIn(List<Integer> values) {
            addCriterion("personcenterid not in", values, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridBetween(Integer value1, Integer value2) {
            addCriterion("personcenterid between", value1, value2, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andPersoncenteridNotBetween(Integer value1, Integer value2) {
            addCriterion("personcenterid not between", value1, value2, "personcenterid");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userid is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userid is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userid =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userid <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userid >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userid >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userid <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userid <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userid in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userid not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userid between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userid not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andFavortienumIsNull() {
            addCriterion("favortienum is null");
            return (Criteria) this;
        }

        public Criteria andFavortienumIsNotNull() {
            addCriterion("favortienum is not null");
            return (Criteria) this;
        }

        public Criteria andFavortienumEqualTo(Integer value) {
            addCriterion("favortienum =", value, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumNotEqualTo(Integer value) {
            addCriterion("favortienum <>", value, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumGreaterThan(Integer value) {
            addCriterion("favortienum >", value, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumGreaterThanOrEqualTo(Integer value) {
            addCriterion("favortienum >=", value, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumLessThan(Integer value) {
            addCriterion("favortienum <", value, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumLessThanOrEqualTo(Integer value) {
            addCriterion("favortienum <=", value, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumIn(List<Integer> values) {
            addCriterion("favortienum in", values, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumNotIn(List<Integer> values) {
            addCriterion("favortienum not in", values, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumBetween(Integer value1, Integer value2) {
            addCriterion("favortienum between", value1, value2, "favortienum");
            return (Criteria) this;
        }

        public Criteria andFavortienumNotBetween(Integer value1, Integer value2) {
            addCriterion("favortienum not between", value1, value2, "favortienum");
            return (Criteria) this;
        }

        public Criteria andIntergralIsNull() {
            addCriterion("intergral is null");
            return (Criteria) this;
        }

        public Criteria andIntergralIsNotNull() {
            addCriterion("intergral is not null");
            return (Criteria) this;
        }

        public Criteria andIntergralEqualTo(Integer value) {
            addCriterion("intergral =", value, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralNotEqualTo(Integer value) {
            addCriterion("intergral <>", value, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralGreaterThan(Integer value) {
            addCriterion("intergral >", value, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralGreaterThanOrEqualTo(Integer value) {
            addCriterion("intergral >=", value, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralLessThan(Integer value) {
            addCriterion("intergral <", value, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralLessThanOrEqualTo(Integer value) {
            addCriterion("intergral <=", value, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralIn(List<Integer> values) {
            addCriterion("intergral in", values, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralNotIn(List<Integer> values) {
            addCriterion("intergral not in", values, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralBetween(Integer value1, Integer value2) {
            addCriterion("intergral between", value1, value2, "intergral");
            return (Criteria) this;
        }

        public Criteria andIntergralNotBetween(Integer value1, Integer value2) {
            addCriterion("intergral not between", value1, value2, "intergral");
            return (Criteria) this;
        }

        public Criteria andBookcoinIsNull() {
            addCriterion("bookcoin is null");
            return (Criteria) this;
        }

        public Criteria andBookcoinIsNotNull() {
            addCriterion("bookcoin is not null");
            return (Criteria) this;
        }

        public Criteria andBookcoinEqualTo(Integer value) {
            addCriterion("bookcoin =", value, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinNotEqualTo(Integer value) {
            addCriterion("bookcoin <>", value, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinGreaterThan(Integer value) {
            addCriterion("bookcoin >", value, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinGreaterThanOrEqualTo(Integer value) {
            addCriterion("bookcoin >=", value, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinLessThan(Integer value) {
            addCriterion("bookcoin <", value, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinLessThanOrEqualTo(Integer value) {
            addCriterion("bookcoin <=", value, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinIn(List<Integer> values) {
            addCriterion("bookcoin in", values, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinNotIn(List<Integer> values) {
            addCriterion("bookcoin not in", values, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinBetween(Integer value1, Integer value2) {
            addCriterion("bookcoin between", value1, value2, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andBookcoinNotBetween(Integer value1, Integer value2) {
            addCriterion("bookcoin not between", value1, value2, "bookcoin");
            return (Criteria) this;
        }

        public Criteria andFootprintnumIsNull() {
            addCriterion("footprintnum is null");
            return (Criteria) this;
        }

        public Criteria andFootprintnumIsNotNull() {
            addCriterion("footprintnum is not null");
            return (Criteria) this;
        }

        public Criteria andFootprintnumEqualTo(Integer value) {
            addCriterion("footprintnum =", value, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumNotEqualTo(Integer value) {
            addCriterion("footprintnum <>", value, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumGreaterThan(Integer value) {
            addCriterion("footprintnum >", value, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("footprintnum >=", value, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumLessThan(Integer value) {
            addCriterion("footprintnum <", value, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumLessThanOrEqualTo(Integer value) {
            addCriterion("footprintnum <=", value, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumIn(List<Integer> values) {
            addCriterion("footprintnum in", values, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumNotIn(List<Integer> values) {
            addCriterion("footprintnum not in", values, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumBetween(Integer value1, Integer value2) {
            addCriterion("footprintnum between", value1, value2, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andFootprintnumNotBetween(Integer value1, Integer value2) {
            addCriterion("footprintnum not between", value1, value2, "footprintnum");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNull() {
            addCriterion("orderid is null");
            return (Criteria) this;
        }

        public Criteria andOrderidIsNotNull() {
            addCriterion("orderid is not null");
            return (Criteria) this;
        }

        public Criteria andOrderidEqualTo(Integer value) {
            addCriterion("orderid =", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotEqualTo(Integer value) {
            addCriterion("orderid <>", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThan(Integer value) {
            addCriterion("orderid >", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderid >=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThan(Integer value) {
            addCriterion("orderid <", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidLessThanOrEqualTo(Integer value) {
            addCriterion("orderid <=", value, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidIn(List<Integer> values) {
            addCriterion("orderid in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotIn(List<Integer> values) {
            addCriterion("orderid not in", values, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidBetween(Integer value1, Integer value2) {
            addCriterion("orderid between", value1, value2, "orderid");
            return (Criteria) this;
        }

        public Criteria andOrderidNotBetween(Integer value1, Integer value2) {
            addCriterion("orderid not between", value1, value2, "orderid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personcenter
     *
     * @mbg.generated do_not_delete_during_merge Thu Sep 05 18:11:44 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table personcenter
     *
     * @mbg.generated Thu Sep 05 18:11:44 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}