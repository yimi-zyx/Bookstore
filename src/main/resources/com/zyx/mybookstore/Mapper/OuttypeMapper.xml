<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyx.mybookstore.Mapper.OuttypeMapper">
  <resultMap id="BaseResultMap" type="com.zyx.mybookstore.Pojo.Outtype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    <id column="outtypeid" jdbcType="INTEGER" property="outtypeid" />
    <result column="outtypename" jdbcType="VARCHAR" property="outtypename" />
    <result column="class1name" jdbcType="VARCHAR" property="class1name" />
    <result column="outtypenum" jdbcType="INTEGER" property="outtypenum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    outtypeid, outtypename, class1name, outtypenum
  </sql>
  <select id="selectByExample" parameterType="com.zyx.mybookstore.Pojo.OuttypeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from outtype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from outtype
    where outtypeid = #{outtypeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    delete from outtype
    where outtypeid = #{outtypeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyx.mybookstore.Pojo.OuttypeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    delete from outtype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyx.mybookstore.Pojo.Outtype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    insert into outtype (outtypeid, outtypename, class1name, 
      outtypenum)
    values (#{outtypeid,jdbcType=INTEGER}, #{outtypename,jdbcType=VARCHAR}, #{class1name,jdbcType=VARCHAR}, 
      #{outtypenum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zyx.mybookstore.Pojo.Outtype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    insert into outtype
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="outtypeid != null">
        outtypeid,
      </if>
      <if test="outtypename != null">
        outtypename,
      </if>
      <if test="class1name != null">
        class1name,
      </if>
      <if test="outtypenum != null">
        outtypenum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="outtypeid != null">
        #{outtypeid,jdbcType=INTEGER},
      </if>
      <if test="outtypename != null">
        #{outtypename,jdbcType=VARCHAR},
      </if>
      <if test="class1name != null">
        #{class1name,jdbcType=VARCHAR},
      </if>
      <if test="outtypenum != null">
        #{outtypenum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyx.mybookstore.Pojo.OuttypeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    select count(*) from outtype
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    update outtype
    <set>
      <if test="record.outtypeid != null">
        outtypeid = #{record.outtypeid,jdbcType=INTEGER},
      </if>
      <if test="record.outtypename != null">
        outtypename = #{record.outtypename,jdbcType=VARCHAR},
      </if>
      <if test="record.class1name != null">
        class1name = #{record.class1name,jdbcType=VARCHAR},
      </if>
      <if test="record.outtypenum != null">
        outtypenum = #{record.outtypenum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    update outtype
    set outtypeid = #{record.outtypeid,jdbcType=INTEGER},
      outtypename = #{record.outtypename,jdbcType=VARCHAR},
      class1name = #{record.class1name,jdbcType=VARCHAR},
      outtypenum = #{record.outtypenum,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyx.mybookstore.Pojo.Outtype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    update outtype
    <set>
      <if test="outtypename != null">
        outtypename = #{outtypename,jdbcType=VARCHAR},
      </if>
      <if test="class1name != null">
        class1name = #{class1name,jdbcType=VARCHAR},
      </if>
      <if test="outtypenum != null">
        outtypenum = #{outtypenum,jdbcType=INTEGER},
      </if>
    </set>
    where outtypeid = #{outtypeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyx.mybookstore.Pojo.Outtype">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 05 18:11:44 CST 2019.
    -->
    update outtype
    set outtypename = #{outtypename,jdbcType=VARCHAR},
      class1name = #{class1name,jdbcType=VARCHAR},
      outtypenum = #{outtypenum,jdbcType=INTEGER}
    where outtypeid = #{outtypeid,jdbcType=INTEGER}
  </update>
</mapper>